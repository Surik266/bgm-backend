{"version":3,"sources":["Layout/AppMain/BreadcrumbItemContainer.js","Layout/AppMain/PageTitle.js","components/Dashboards/DashboardTabs/MakeData.js","components/Dashboards/DashboardTabs/Active.js","components/Dashboards/DashboardTabs/Inactive.js","components/Dashboards/DashboardTabs/WhiteListed.js","components/Dashboards/DashboardTabs/Unfriended.js","components/Dashboards/index.js"],"names":["BreadcrumbItemContainer","generateLink","previousLinks","_this","props","map","_ref","i","name","href","react_default","a","createElement","BreadcrumbItem","key","react_router_dom","to","sectionName","this","react","Breadcrumb","react_fontawesome_index_es","icon","faHome","active","Component","PageTitle","_this$props","_this$props$previousL","enablePageTitleIcon","enablePageTitleSubheading","heading","subheading","className","BreadcrumbItemContainer_BreadcrumbItemContainer","connect","state","ThemeOptions","dispatch","range","len","arr","push","newPerson","fullName","namor","generate","words","numbers","likes","Math","floor","random","comments","shares","actions","makeData","_len","arguments","length","lens","Array","_key","makeDataLevel","depth","undefined","d","Object","objectSpread","subRows","DataTableFixedHeader","classCallCheck","_super","call","NumberRangeColumnFilter","_ref$column","column","_ref$column$filterVal","filterValue","preFilteredRows","setFilter","id","_React$useMemo","React","useMemo","min","values","max","forEach","row","_React$useMemo2","slicedToArray","style","display","value","type","onChange","e","val","target","old","parseInt","placeholder","concat","width","marginRight","marginLeft","data","react_addons_css_transition_group_default","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","AppMain_PageTitle","Row","Col","md","Card","CardBody","react_table_es","columns","Header","accessor","Filter","filter","defaultPageSize","height","Dashboards","AppHeader","AppSidebar","rc_tabs_es","defaultActiveKey","destroyInactiveTabPane","renderTabBar","ScrollableInkTabBar_default","renderTabContent","SwipeableTabContent_default","tab","Active_DataTableFixedHeader","Inactive_DataTableFixedHeader","WhiteListed_DataTableFixedHeader","Unfriended_DataTableFixedHeader"],"mappings":"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","file":"static/js/8.d01d6e40.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { Link } from 'react-router-dom'\n\nimport {\n    Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\n\nimport {\n    faHome\n\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nexport default class BreadcrumbItemContainer extends Component {\n\n\n     generateLink = () => {\n\n         const { previousLinks } = this.props\n\n        if (previousLinks !== null && previousLinks ) {\n\n            return  previousLinks.map( ( { name, href },i ) => {\n                return  (   <BreadcrumbItem key = { i }>\n                        <Link to={href} >\n                            { name }\n                        </Link>\n                    </BreadcrumbItem>\n                )\n            } )\n\n        }else {\n            return null\n        }\n\n    }\n\n    render() {\n\n        const { sectionName } = this.props\n\n        return (\n            <Fragment>\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to='/' >\n                            <FontAwesomeIcon icon={faHome}/>\n                         </Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem>\n                        <Link to='/dashboard' >\n                            Dashboard\n                        </Link>\n                    </BreadcrumbItem>\n                    {\n                        this.generateLink()\n                    }\n                    <BreadcrumbItem active>{ sectionName }</BreadcrumbItem>\n                </Breadcrumb>\n            </Fragment>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\n\nimport BreadcrumbItemContainer from './BreadcrumbItemContainer'\n\nclass PageTitle extends Component {\n\n    render() {\n        let {\n            enablePageTitleIcon,\n            enablePageTitleSubheading,\n            heading,\n            icon,\n            subheading,\n            previousLinks = null,\n            sectionName\n        } = this.props;\n\n        return (\n\n                    <div className=\"page-title-actions\">\n                        <BreadcrumbItemContainer previousLinks = { previousLinks } sectionName={ sectionName } />\n                    </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitle);\n","import namor from 'namor'\n\nconst range = len => {\n    const arr = []\n    for (let i = 0; i < len; i++) {\n        arr.push(i)\n    }\n    return arr\n}\n\nconst newPerson = () => {\n    return {\n        fullName: namor.generate({ words: 1, numbers: 0 }),\n        likes: Math.floor(Math.random() * 30),\n        comments: Math.floor(Math.random() * 30),\n        shares: Math.floor(Math.random() * 30),\n        actions: Math.floor(Math.random() * 100),\n    }\n}\n\nexport  function makeData(...lens) {\n    const makeDataLevel = (depth = 0) => {\n        const len = lens[depth]\n        return range(len).map(d => {\n            return {\n                ...newPerson(),\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n            }\n        })\n    }\n\n    return makeDataLevel()\n}\n","import React, {Fragment} from 'react'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport {\n    Row, Col,\n    Card, CardBody,\n} from 'reactstrap';\n\nimport ReactTable from \"react-table\";\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\nimport { makeData } from \"./MakeData\";\n\nexport default class DataTableFixedHeader extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: makeData(2000)\n        };\n    }\n\n     NumberRangeColumnFilter = ({\n                                         column: { filterValue = [], preFilteredRows, setFilter, id },\n                                     }) => {\n        const [min, max] = React.useMemo(() => {\n            let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            preFilteredRows.forEach(row => {\n                min = Math.min(row.values[id], min)\n                max = Math.max(row.values[id], max)\n            })\n            return [min, max]\n        }, [id, preFilteredRows])\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                }}\n            >\n                <input\n                    value={filterValue[0] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n                    }}\n                    placeholder={`Min (${min})`}\n                    style={{\n                        width: '70px',\n                        marginRight: '0.5rem',\n                    }}\n                />\n                to\n                <input\n                    value={filterValue[1] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n                    }}\n                    placeholder={`Max (${max})`}\n                    style={{\n                        width: '70px',\n                        marginLeft: '0.5rem',\n                    }}\n                />\n            </div>\n        )\n    }\n\n    render() {\n        const {data} = this.state;\n\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div>\n                        <PageTitle\n                            heading=\"Data Tables\"\n                            subheading=\"Choose between regular React Bootstrap tables or advanced dynamic ones.\"\n                            icon=\"pe-7s-medal icon-gradient bg-tempting-azure\"\n                        />\n                    </div>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <ReactTable\n                                        data={data}\n                                        columns={[\n                                            {\n                                                Header: 'Name',\n                                                columns: [\n                                                    {\n                                                        Header: 'Full Name',\n                                                        accessor: 'fullName',\n                                                    }\n                                                ],\n                                            },\n                                            {\n                                                Header: 'Info',\n                                                columns: [\n                                                    {\n                                                        Header: 'Likes',\n                                                        accessor: 'likes',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Comments',\n                                                        accessor: 'comments',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Shares',\n                                                        accessor: 'shares',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Total Actions',\n                                                        accessor: 'actions',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                ],\n                                            },\n                                        ]}\n                                        defaultPageSize={100}\n                                        style={{\n                                            height: \"450px\" // This will force the table body to overflow and scroll, since there is not enough room\n                                        }}\n                                        className=\"-striped -highlight -fixed\"\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n","import React, {Fragment} from 'react'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport {\n    Row, Col,\n    Card, CardBody,\n} from 'reactstrap';\n\nimport ReactTable from \"react-table\";\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\nimport { makeData } from \"./MakeData\";\n\nexport default class DataTableFixedHeader extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: makeData(10)\n        };\n    }\n\n    NumberRangeColumnFilter = ({\n                                   column: { filterValue = [], preFilteredRows, setFilter, id },\n                               }) => {\n        const [min, max] = React.useMemo(() => {\n            let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            preFilteredRows.forEach(row => {\n                min = Math.min(row.values[id], min)\n                max = Math.max(row.values[id], max)\n            })\n            return [min, max]\n        }, [id, preFilteredRows])\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                }}\n            >\n                <input\n                    value={filterValue[0] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n                    }}\n                    placeholder={`Min (${min})`}\n                    style={{\n                        width: '70px',\n                        marginRight: '0.5rem',\n                    }}\n                />\n                to\n                <input\n                    value={filterValue[1] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n                    }}\n                    placeholder={`Max (${max})`}\n                    style={{\n                        width: '70px',\n                        marginLeft: '0.5rem',\n                    }}\n                />\n            </div>\n        )\n    }\n\n    render() {\n        const {data} = this.state;\n\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div>\n                        <PageTitle\n                            heading=\"Data Tables\"\n                            subheading=\"Choose between regular React Bootstrap tables or advanced dynamic ones.\"\n                            icon=\"pe-7s-medal icon-gradient bg-tempting-azure\"\n                        />\n                    </div>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <ReactTable\n                                        data={data}\n                                        columns={[\n                                            {\n                                                Header: 'Name',\n                                                columns: [\n                                                    {\n                                                        Header: 'Full Name',\n                                                        accessor: 'fullName',\n                                                    }\n                                                ],\n                                            },\n                                            {\n                                                Header: 'Info',\n                                                columns: [\n                                                    {\n                                                        Header: 'Likes',\n                                                        accessor: 'likes',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Comments',\n                                                        accessor: 'comments',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Shares',\n                                                        accessor: 'shares',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Total Actions',\n                                                        accessor: 'actions',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                ],\n                                            },\n                                        ]}\n                                        defaultPageSize={20}\n                                        style={{\n                                            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\n                                        }}\n                                        className=\"-striped -highlight -fixed\"\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n","import React, {Fragment} from 'react'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport {\n    Row, Col,\n    Card, CardBody,\n} from 'reactstrap';\n\nimport ReactTable from \"react-table\";\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\nimport { makeData } from \"./MakeData\";\n\nexport default class DataTableFixedHeader extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: makeData(1)\n        };\n    }\n\n    NumberRangeColumnFilter = ({\n                                   column: { filterValue = [], preFilteredRows, setFilter, id },\n                               }) => {\n        const [min, max] = React.useMemo(() => {\n            let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            preFilteredRows.forEach(row => {\n                min = Math.min(row.values[id], min)\n                max = Math.max(row.values[id], max)\n            })\n            return [min, max]\n        }, [id, preFilteredRows])\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                }}\n            >\n                <input\n                    value={filterValue[0] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n                    }}\n                    placeholder={`Min (${min})`}\n                    style={{\n                        width: '70px',\n                        marginRight: '0.5rem',\n                    }}\n                />\n                to\n                <input\n                    value={filterValue[1] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n                    }}\n                    placeholder={`Max (${max})`}\n                    style={{\n                        width: '70px',\n                        marginLeft: '0.5rem',\n                    }}\n                />\n            </div>\n        )\n    }\n\n    render() {\n        const {data} = this.state;\n\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div>\n                        <PageTitle\n                            heading=\"Data Tables\"\n                            subheading=\"Choose between regular React Bootstrap tables or advanced dynamic ones.\"\n                            icon=\"pe-7s-medal icon-gradient bg-tempting-azure\"\n                        />\n                    </div>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <ReactTable\n                                        data={data}\n                                        columns={[\n                                            {\n                                                Header: 'Name',\n                                                columns: [\n                                                    {\n                                                        Header: 'Full Name',\n                                                        accessor: 'fullName',\n                                                    }\n                                                ],\n                                            },\n                                            {\n                                                Header: 'Info',\n                                                columns: [\n                                                    {\n                                                        Header: 'Likes',\n                                                        accessor: 'likes',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Comments',\n                                                        accessor: 'comments',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Shares',\n                                                        accessor: 'shares',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Total Actions',\n                                                        accessor: 'actions',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                ],\n                                            },\n                                        ]}\n                                        defaultPageSize={20}\n                                        style={{\n                                            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\n                                        }}\n                                        className=\"-striped -highlight -fixed\"\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n","import React, {Fragment} from 'react'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport {\n    Row, Col,\n    Card, CardBody,\n} from 'reactstrap';\n\nimport ReactTable from \"react-table\";\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\nimport { makeData } from \"./MakeData\";\n\nexport default class DataTableFixedHeader extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: makeData(40)\n        };\n    }\n\n    NumberRangeColumnFilter = ({\n                                   column: { filterValue = [], preFilteredRows, setFilter, id },\n                               }) => {\n        const [min, max] = React.useMemo(() => {\n            let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n            preFilteredRows.forEach(row => {\n                min = Math.min(row.values[id], min)\n                max = Math.max(row.values[id], max)\n            })\n            return [min, max]\n        }, [id, preFilteredRows])\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                }}\n            >\n                <input\n                    value={filterValue[0] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n                    }}\n                    placeholder={`Min (${min})`}\n                    style={{\n                        width: '70px',\n                        marginRight: '0.5rem',\n                    }}\n                />\n                to\n                <input\n                    value={filterValue[1] || ''}\n                    type=\"number\"\n                    onChange={e => {\n                        const val = e.target.value\n                        setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n                    }}\n                    placeholder={`Max (${max})`}\n                    style={{\n                        width: '70px',\n                        marginLeft: '0.5rem',\n                    }}\n                />\n            </div>\n        )\n    }\n\n    render() {\n        const {data} = this.state;\n\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div>\n                        <PageTitle\n                            heading=\"Data Tables\"\n                            subheading=\"Choose between regular React Bootstrap tables or advanced dynamic ones.\"\n                            icon=\"pe-7s-medal icon-gradient bg-tempting-azure\"\n                        />\n                    </div>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <ReactTable\n                                        data={data}\n                                        columns={[\n                                            {\n                                                Header: 'Name',\n                                                columns: [\n                                                    {\n                                                        Header: 'Full Name',\n                                                        accessor: 'fullName',\n                                                    }\n                                                ],\n                                            },\n                                            {\n                                                Header: 'Info',\n                                                columns: [\n                                                    {\n                                                        Header: 'Likes',\n                                                        accessor: 'likes',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Comments',\n                                                        accessor: 'comments',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Shares',\n                                                        accessor: 'shares',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                    {\n                                                        Header: 'Total Actions',\n                                                        accessor: 'actions',\n                                                        Filter: this.NumberRangeColumnFilter,\n                                                        filter: 'between',\n                                                    },\n                                                ],\n                                            },\n                                        ]}\n                                        defaultPageSize={20}\n                                        style={{\n                                            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\n                                        }}\n                                        className=\"-striped -highlight -fixed\"\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n","import React, {Fragment, Component} from 'react';\nimport { connect } from \"react-redux\"\n// Layout\nimport AppHeader from '../../Layout/AppHeader/';\nimport AppSidebar from '../../Layout/AppSidebar/';\n\n//Tabs\nimport ActiveTab from \"./DashboardTabs/Active\";\n\n// Theme Options\nimport ThemeOptions from '../../Layout/ThemeOptions/';\nimport Tabs, {TabPane} from \"rc-tabs\";\nimport ScrollableInkTabBar from \"rc-tabs/lib/ScrollableInkTabBar\";\nimport TabContent from \"rc-tabs/lib/SwipeableTabContent\";\nimport Inactive from \"./DashboardTabs/Inactive\";\nimport WhiteListed from \"./DashboardTabs/WhiteListed\";\nimport UnFriended from \"./DashboardTabs/Unfriended\";\n\nclass Dashboards extends  Component {\n\n\n    render () {\n\n        return(\n            <Fragment>\n                    <ThemeOptions/>\n                    <AppHeader/>\n\n                    <div className=\"app-main\">\n                        <AppSidebar/>\n                        <div className=\"app-main__outer\">\n                            <div className=\"app-main__inner\">\n                                <Tabs\n                                    defaultActiveKey=\"1\"\n                                    destroyInactiveTabPane\n                                    renderTabBar={() => <ScrollableInkTabBar/>}\n                                    renderTabContent={() => <TabContent/>}\n                                >\n                                    <TabPane tab='Active' key=\"1\" ><ActiveTab/></TabPane>\n                                    <TabPane tab='Inactive' key=\"2\" ><Inactive/></TabPane>\n                                    <TabPane tab='WhiteListed' key=\"3\" ><WhiteListed/></TabPane>\n                                    <TabPane tab='Unfriended' key=\"4\" ><UnFriended /></TabPane>\n                                </Tabs>\n\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n        )\n\n    }\n}\n\n\nexport default connect(null)(Dashboards)\n"],"sourceRoot":""}